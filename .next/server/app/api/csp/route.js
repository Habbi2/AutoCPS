"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/csp/route";
exports.ids = ["app/api/csp/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "playwright":
/*!*****************************!*\
  !*** external "playwright" ***!
  \*****************************/
/***/ ((module) => {

module.exports = import("playwright");;

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcsp%2Froute&page=%2Fapi%2Fcsp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcsp%2Froute.ts&appDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcsp%2Froute&page=%2Fapi%2Fcsp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcsp%2Froute.ts&appDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_javie_Desktop_Game_Online_Html_autocsp_app_api_csp_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/csp/route.ts */ \"(rsc)/./app/api/csp/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/csp/route\",\n        pathname: \"/api/csp\",\n        filename: \"route\",\n        bundlePath: \"app/api/csp/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\javie\\\\Desktop\\\\Game Online Html\\\\autocsp\\\\app\\\\api\\\\csp\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_javie_Desktop_Game_Online_Html_autocsp_app_api_csp_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/csp/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjc3AlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmNzcCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmNzcCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNqYXZpZSU1Q0Rlc2t0b3AlNUNHYW1lJTIwT25saW5lJTIwSHRtbCU1Q2F1dG9jc3AlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNVc2VycyU1Q2phdmllJTVDRGVza3RvcCU1Q0dhbWUlMjBPbmxpbmUlMjBIdG1sJTVDYXV0b2NzcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDNkI7QUFDMUc7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hdXRvY3NwLz9kYjNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIkM6XFxcXFVzZXJzXFxcXGphdmllXFxcXERlc2t0b3BcXFxcR2FtZSBPbmxpbmUgSHRtbFxcXFxhdXRvY3NwXFxcXGFwcFxcXFxhcGlcXFxcY3NwXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jc3Avcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9jc3BcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2NzcC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGphdmllXFxcXERlc2t0b3BcXFxcR2FtZSBPbmxpbmUgSHRtbFxcXFxhdXRvY3NwXFxcXGFwcFxcXFxhcGlcXFxcY3NwXFxcXHJvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9jc3Avcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcsp%2Froute&page=%2Fapi%2Fcsp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcsp%2Froute.ts&appDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/csp/route.ts":
/*!******************************!*\
  !*** ./app/api/csp/route.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   revalidate: () => (/* binding */ revalidate)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _src_fetch__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../src/fetch */ \"(rsc)/./src/fetch.ts\");\n/* harmony import */ var _src_collect__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../src/collect */ \"(rsc)/./src/collect.ts\");\n/* harmony import */ var _src_builder__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../src/builder */ \"(rsc)/./src/builder.ts\");\n/* harmony import */ var _src_crawl__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../src/crawl */ \"(rsc)/./src/crawl.ts\");\n/* harmony import */ var _src_risk__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../src/risk */ \"(rsc)/./src/risk.ts\");\n\n\n\n\n\n\nconst revalidate = 0;\nasync function GET(req) {\n    const url = req.nextUrl.searchParams.get(\"url\");\n    if (!url) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Missing url param\"\n        }, {\n            status: 400\n        });\n    }\n    const strictQuery = req.nextUrl.searchParams.get(\"strict\") === \"true\";\n    const runtime = req.nextUrl.searchParams.get(\"runtime\") === \"true\";\n    const depthParam = req.nextUrl.searchParams.get(\"depth\");\n    const depth = depthParam ? Math.min(3, Math.max(0, parseInt(depthParam, 10) || 0)) : 0; // cap depth to 3\n    try {\n        const page = await (0,_src_fetch__WEBPACK_IMPORTED_MODULE_1__.fetchPage)(url);\n        let resources = (0,_src_collect__WEBPACK_IMPORTED_MODULE_2__.collectResources)(page.html, page.finalUrl);\n        let runtimeStatus = \"disabled\";\n        if (runtime) {\n            try {\n                const mod = await __webpack_require__.e(/*! import() */ \"_rsc_src_runtime_ts\").then(__webpack_require__.bind(__webpack_require__, /*! ../../../src/runtime */ \"(rsc)/./src/runtime.ts\"));\n                resources = await mod.collectRuntimeResources(page.finalUrl, {\n                    waitUntil: \"networkidle\"\n                });\n                runtimeStatus = \"ok\";\n            } catch (e) {\n                // playwright not available or runtime failure; continue with static resources\n                runtimeStatus = \"unavailable\";\n            }\n        }\n        let crawledPages = [\n            page.finalUrl\n        ];\n        if (depth > 0) {\n            try {\n                const crawlRes = await (0,_src_crawl__WEBPACK_IMPORTED_MODULE_4__.crawl)(page.finalUrl, {\n                    depth,\n                    sameOriginOnly: true\n                });\n                crawledPages = crawlRes.pages;\n                // merge crawl resources\n                const merged = crawlRes.resources;\n                resources.inlineScripts.push(...merged.inlineScripts);\n                resources.inlineStyles.push(...merged.inlineStyles);\n                merged.externalScriptOrigins.forEach((o)=>resources.externalScriptOrigins.add(o));\n                merged.externalStyleOrigins.forEach((o)=>resources.externalStyleOrigins.add(o));\n                merged.imageOrigins.forEach((o)=>resources.imageOrigins.add(o));\n                merged.fontOrigins.forEach((o)=>resources.fontOrigins.add(o));\n                merged.connectOrigins.forEach((o)=>resources.connectOrigins.add(o));\n            } catch  {}\n        }\n        // Build baseline (non-strict) and strict side-by-side\n        const baseline = (0,_src_builder__WEBPACK_IMPORTED_MODULE_3__.buildCSP)(resources, {\n            strict: false,\n            existing: page.csp\n        });\n        const strict = (0,_src_builder__WEBPACK_IMPORTED_MODULE_3__.buildCSP)(resources, {\n            strict: true,\n            existing: page.csp\n        });\n        const active = strictQuery ? strict : baseline;\n        const diffModes = diffBetweenPolicies(baseline.policy, strict.policy);\n        const summaryBaseline = summarizeDirectives(baseline.directives);\n        const summaryStrict = summarizeDirectives(strict.directives);\n        const headers = recommendedHeaders();\n        const riskActive = stringifyRisk((0,_src_risk__WEBPACK_IMPORTED_MODULE_5__.assessPolicy)(active.policy));\n        const riskBaseline = stringifyRisk((0,_src_risk__WEBPACK_IMPORTED_MODULE_5__.assessPolicy)(baseline.policy));\n        const riskStrict = stringifyRisk((0,_src_risk__WEBPACK_IMPORTED_MODULE_5__.assessPolicy)(strict.policy));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            input: url,\n            finalUrl: page.finalUrl,\n            status: page.status,\n            existing: page.csp,\n            baseline: {\n                policy: baseline.policy,\n                notes: baseline.notes,\n                diffExisting: baseline.diff\n            },\n            strict: {\n                policy: strict.policy,\n                notes: strict.notes,\n                diffExisting: strict.diff\n            },\n            activeMode: strictQuery ? \"strict\" : \"baseline\",\n            runtime: runtime ? true : false,\n            runtimeStatus,\n            crawl: {\n                depth,\n                pages: crawledPages,\n                count: crawledPages.length\n            },\n            diffModes,\n            headers,\n            policy: active.policy,\n            notes: active.notes,\n            risk: {\n                active: riskActive,\n                baseline: riskBaseline,\n                strict: riskStrict\n            },\n            summaries: {\n                baseline: summaryBaseline,\n                strict: summaryStrict\n            }\n        }, {\n            headers: {\n                \"Cache-Control\": \"public, max-age=0, s-maxage=300\"\n            }\n        });\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: e.message || \"Failed\"\n        }, {\n            status: 500\n        });\n    }\n}\nfunction diffBetweenPolicies(a, b) {\n    if (a === b) return {\n        added: [],\n        removed: []\n    };\n    const setA = new Set(a.split(/;\\s*/));\n    const setB = new Set(b.split(/;\\s*/));\n    const added = [];\n    const removed = [];\n    for (const d of setB)if (!setA.has(d)) added.push(d);\n    for (const d of setA)if (!setB.has(d)) removed.push(d);\n    return {\n        added,\n        removed\n    };\n}\nfunction recommendedHeaders() {\n    return {\n        \"Referrer-Policy\": \"strict-origin-when-cross-origin\",\n        \"Permissions-Policy\": [\n            \"accelerometer=()\",\n            \"ambient-light-sensor=()\",\n            \"autoplay=(self)\",\n            \"battery=()\",\n            \"camera=()\",\n            \"display-capture=()\",\n            \"encrypted-media=()\",\n            \"fullscreen=(self)\",\n            \"geolocation=()\",\n            \"gyroscope=()\",\n            \"magnetometer=()\",\n            \"microphone=()\",\n            \"midi=()\",\n            \"payment=()\",\n            \"picture-in-picture=(self)\",\n            \"publickey-credentials-get=(self)\",\n            \"screen-wake-lock=()\",\n            \"sync-xhr=(self)\",\n            \"usb=()\",\n            \"xr-spatial-tracking=()\"\n        ].join(\", \")\n    };\n}\nfunction stringifyRisk(r) {\n    return {\n        score: r.score,\n        level: r.level,\n        issues: r.issues.map((i)=>i.message)\n    };\n}\nfunction summarizeDirectives(directives) {\n    const out = {};\n    const hashRe = /^'sha256-/;\n    const originRe = /^https?:\\/\\//i;\n    for (const [name, list] of Object.entries(directives)){\n        const hashes = list.filter((s)=>hashRe.test(s)).length;\n        const origins = list.filter((s)=>originRe.test(s)).length;\n        const wildcards = list.filter((s)=>s === \"*\").length;\n        out[name] = {\n            sources: list.length,\n            hashes,\n            origins,\n            wildcards\n        };\n    }\n    return out;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/csp/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/builder.ts":
/*!************************!*\
  !*** ./src/builder.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildCSP: () => (/* binding */ buildCSP)\n/* harmony export */ });\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:crypto */ \"node:crypto\");\n/* harmony import */ var node_crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_crypto__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction buildCSP(resources, opts = {}) {\n    const notes = [];\n    const directives = {\n        \"default-src\": [\n            \"'self'\"\n        ],\n        \"object-src\": [\n            \"'none'\"\n        ],\n        \"base-uri\": [\n            \"'self'\"\n        ],\n        \"frame-ancestors\": [\n            \"'none'\"\n        ]\n    };\n    // Scripts\n    const scriptSrc = [\n        \"'self'\"\n    ];\n    for (const o of resources.externalScriptOrigins)scriptSrc.push(o);\n    for (const code of resources.inlineScripts){\n        const hash = sha256(code);\n        scriptSrc.push(`'sha256-${hash}'`);\n    }\n    if (scriptSrc.length) directives[\"script-src\"] = dedupe(scriptSrc);\n    // Styles\n    const styleSrc = [\n        \"'self'\"\n    ];\n    for (const o of resources.externalStyleOrigins)styleSrc.push(o);\n    for (const css of resources.inlineStyles)styleSrc.push(`'sha256-${sha256(css)}'`);\n    if (styleSrc.length) directives[\"style-src\"] = dedupe(styleSrc);\n    // Images\n    const imgSrc = [\n        \"'self'\",\n        \"data:\"\n    ];\n    for (const o of resources.imageOrigins)imgSrc.push(o);\n    if (imgSrc.length) directives[\"img-src\"] = dedupe(imgSrc);\n    // Fonts\n    if (resources.fontOrigins.size) {\n        const fontSrc = [\n            \"'self'\"\n        ];\n        for (const o of resources.fontOrigins)fontSrc.push(o);\n        directives[\"font-src\"] = dedupe(fontSrc);\n    }\n    // Connect (heuristic currently only preconnect links); always include self\n    const connectSrc = [\n        \"'self'\"\n    ];\n    for (const o of resources.connectOrigins)connectSrc.push(o);\n    directives[\"connect-src\"] = dedupe(connectSrc);\n    // Upgrade insecure + block mixed plugins baseline\n    directives[\"upgrade-insecure-requests\"] = [];\n    // Strict mode adjustments\n    if (opts.strict) {\n        // Remove external origins except self + hashes\n        tightenToHashes(directives, \"script-src\");\n        tightenToHashes(directives, \"style-src\");\n        notes.push(\"Strict mode: external script/style origins removed; only self + hashes allowed.\");\n    }\n    const policy = serialize(directives);\n    const diff = opts.existing ? diffPolicies(opts.existing, policy) : undefined;\n    if (diff && (diff.added.length || diff.removed.length)) {\n        notes.push(\"Diff computed vs existing CSP.\");\n    }\n    return {\n        policy,\n        directives,\n        diff,\n        notes\n    };\n}\nfunction sha256(content) {\n    return node_crypto__WEBPACK_IMPORTED_MODULE_0___default().createHash(\"sha256\").update(content).digest(\"base64\");\n}\nfunction dedupe(arr) {\n    return Array.from(new Set(arr));\n}\nfunction serialize(directives) {\n    return Object.entries(directives).map(([k, v])=>v.length ? `${k} ${v.join(\" \")}` : k).join(\"; \");\n}\nfunction tightenToHashes(directives, name) {\n    const list = directives[name];\n    if (!list) return;\n    const hashes = list.filter((i)=>/^'sha256-/.test(i));\n    const self = list.includes(\"'self'\") ? [\n        \"'self'\"\n    ] : [];\n    directives[name] = dedupe([\n        ...self,\n        ...hashes\n    ]);\n}\nfunction diffPolicies(oldP, newP) {\n    const oldSet = new Set(oldP.split(/;\\s*/));\n    const newSet = new Set(newP.split(/;\\s*/));\n    const added = [];\n    const removed = [];\n    for (const d of newSet)if (!oldSet.has(d)) added.push(d);\n    for (const d of oldSet)if (!newSet.has(d)) removed.push(d);\n    return {\n        added,\n        removed\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/builder.ts\n");

/***/ }),

/***/ "(rsc)/./src/collect.ts":
/*!************************!*\
  !*** ./src/collect.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectResources: () => (/* binding */ collectResources)\n/* harmony export */ });\n/* harmony import */ var parse5__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! parse5 */ \"(rsc)/./node_modules/parse5/dist/index.js\");\n\nfunction collectResources(html, pageUrl) {\n    const doc = parse5__WEBPACK_IMPORTED_MODULE_0__.parse(html);\n    const baseOrigin = safeOrigin(pageUrl);\n    const res = {\n        inlineScripts: [],\n        inlineStyles: [],\n        externalScriptOrigins: new Set(),\n        externalStyleOrigins: new Set(),\n        imageOrigins: new Set(),\n        fontOrigins: new Set(),\n        connectOrigins: new Set(),\n        dataUris: {\n            scripts: 0,\n            images: 0,\n            styles: 0\n        }\n    };\n    function getAttr(node, name) {\n        if (!node.attrs) return undefined;\n        const found = node.attrs.find((a)=>a.name.toLowerCase() === name.toLowerCase());\n        return found?.value;\n    }\n    function recordOrigin(url) {\n        if (!url) return;\n        if (/^data:/i.test(url)) return;\n        const o = safeOrigin(url);\n        if (o && o !== baseOrigin) return o;\n        return o; // always return origin (even if same) for future policy tightening\n    }\n    function walk(node) {\n        if (node.nodeName === \"#text\") return;\n        const tag = node.tagName?.toLowerCase();\n        if (tag === \"script\") {\n            const src = getAttr(node, \"src\");\n            if (src) {\n                const o = recordOrigin(src);\n                if (o) res.externalScriptOrigins.add(o);\n            } else if (node.childNodes) {\n                const code = node.childNodes.map((c)=>c.value || \"\").join(\"\");\n                if (code.trim()) res.inlineScripts.push(code);\n            }\n        }\n        if (tag === \"link\") {\n            const rel = (getAttr(node, \"rel\") || \"\").toLowerCase();\n            const href = getAttr(node, \"href\");\n            if (rel.includes(\"stylesheet\") && href) {\n                const o = recordOrigin(href);\n                if (o) res.externalStyleOrigins.add(o);\n            }\n            if (/preconnect|dns-prefetch/.test(rel) && href) {\n                const o = recordOrigin(href);\n                if (o) res.connectOrigins.add(o);\n            }\n        }\n        if (tag === \"img\") {\n            const src = getAttr(node, \"src\");\n            if (src) {\n                if (/^data:/i.test(src)) res.dataUris.images++;\n                const o = recordOrigin(src);\n                if (o) res.imageOrigins.add(o);\n            }\n        }\n        if (tag === \"style\" && node.childNodes) {\n            const css = node.childNodes.map((c)=>c.value || \"\").join(\"\");\n            if (css.trim()) res.inlineStyles.push(css);\n            // crude font src detection\n            const fontUrlMatches = Array.from(css.matchAll(/url\\(([^)]+)\\)/gi));\n            const fontUrls = fontUrlMatches.map((m)=>(m[1] || \"\").replace(/['\"]/g, \"\"));\n            for (const fu of fontUrls){\n                if (/^data:/i.test(fu)) continue;\n                else {\n                    const o = recordOrigin(fu);\n                    if (o) res.fontOrigins.add(o);\n                }\n            }\n        }\n        if (node.childNodes) node.childNodes.forEach(walk);\n    }\n    walk(doc);\n    return res;\n}\nfunction safeOrigin(u) {\n    try {\n        const url = new URL(u, \"http://dummy\");\n        return url.origin;\n    } catch  {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/collect.ts\n");

/***/ }),

/***/ "(rsc)/./src/crawl.ts":
/*!**********************!*\
  !*** ./src/crawl.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   crawl: () => (/* binding */ crawl)\n/* harmony export */ });\n/* harmony import */ var _fetch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./fetch */ \"(rsc)/./src/fetch.ts\");\n/* harmony import */ var _collect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./collect */ \"(rsc)/./src/collect.ts\");\n\n\nasync function crawl(startUrl, opts) {\n    const depth = Math.max(0, opts.depth);\n    const maxPages = opts.maxPages ?? 15;\n    const visited = new Set();\n    const queue = [\n        {\n            url: startUrl,\n            d: 0\n        }\n    ];\n    const origin = new URL(startUrl).origin;\n    const aggregate = {\n        inlineScripts: [],\n        inlineStyles: [],\n        externalScriptOrigins: new Set(),\n        externalStyleOrigins: new Set(),\n        imageOrigins: new Set(),\n        fontOrigins: new Set(),\n        connectOrigins: new Set(),\n        dataUris: {\n            scripts: 0,\n            images: 0,\n            styles: 0\n        }\n    };\n    while(queue.length && visited.size < maxPages){\n        const { url, d } = queue.shift();\n        if (visited.has(url)) continue;\n        visited.add(url);\n        try {\n            const page = await (0,_fetch__WEBPACK_IMPORTED_MODULE_0__.fetchPage)(url);\n            const res = (0,_collect__WEBPACK_IMPORTED_MODULE_1__.collectResources)(page.html, page.finalUrl);\n            mergeResources(aggregate, res);\n            if (d < depth) {\n                // Extract links for next level (simple regex approach to avoid extra parser traversal cost)\n                const linkMatches = page.html.matchAll(/<a[^>]+href=[\"']([^\"'#?]+)[\"']/gi);\n                for (const m of linkMatches){\n                    const href = m[1];\n                    if (!href) continue;\n                    let next;\n                    try {\n                        next = new URL(href, page.finalUrl).toString();\n                    } catch  {\n                        continue;\n                    }\n                    if (opts.sameOriginOnly !== false && new URL(next).origin !== origin) continue;\n                    if (!visited.has(next)) queue.push({\n                        url: next,\n                        d: d + 1\n                    });\n                }\n            }\n        } catch  {\n        // Skip errors silently for now (could add logging)\n        }\n    }\n    return {\n        pages: Array.from(visited),\n        resources: aggregate\n    };\n}\nfunction mergeResources(base, extra) {\n    base.inlineScripts.push(...extra.inlineScripts);\n    base.inlineStyles.push(...extra.inlineStyles);\n    extra.externalScriptOrigins.forEach((o)=>base.externalScriptOrigins.add(o));\n    extra.externalStyleOrigins.forEach((o)=>base.externalStyleOrigins.add(o));\n    extra.imageOrigins.forEach((o)=>base.imageOrigins.add(o));\n    extra.fontOrigins.forEach((o)=>base.fontOrigins.add(o));\n    extra.connectOrigins.forEach((o)=>base.connectOrigins.add(o));\n    base.dataUris.scripts += extra.dataUris.scripts;\n    base.dataUris.images += extra.dataUris.images;\n    base.dataUris.styles += extra.dataUris.styles;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNDLENBQUFBLElBQUtILEtBQUs1QixXQUFXLENBQUNVLEdBQUcsQ0FBQ3FCO0lBQ3BERixNQUFNNUIsY0FBYyxDQUFDNkIsT0FBTyxDQUFDQyxDQUFBQSxJQUFLSCxLQUFLM0IsY0FBYyxDQUFDUyxHQUFHLENBQUNxQjtJQUMxREgsS0FBSzFCLFFBQVEsQ0FBQ0MsT0FBTyxJQUFJMEIsTUFBTTNCLFFBQVEsQ0FBQ0MsT0FBTztJQUMvQ3lCLEtBQUsxQixRQUFRLENBQUNFLE1BQU0sSUFBSXlCLE1BQU0zQixRQUFRLENBQUNFLE1BQU07SUFDN0N3QixLQUFLMUIsUUFBUSxDQUFDRyxNQUFNLElBQUl3QixNQUFNM0IsUUFBUSxDQUFDRyxNQUFNO0FBQy9DIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXV0b2NzcC8uL3NyYy9jcmF3bC50cz9kZWViIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZldGNoUGFnZSB9IGZyb20gJy4vZmV0Y2gnO1xyXG5pbXBvcnQgeyBjb2xsZWN0UmVzb3VyY2VzLCBDb2xsZWN0ZWRSZXNvdXJjZXMgfSBmcm9tICcuL2NvbGxlY3QnO1xyXG5cclxuZXhwb3J0IGludGVyZmFjZSBDcmF3bE9wdGlvbnMgeyBkZXB0aDogbnVtYmVyOyBzYW1lT3JpZ2luT25seT86IGJvb2xlYW47IG1heFBhZ2VzPzogbnVtYmVyOyB9XHJcbmV4cG9ydCBpbnRlcmZhY2UgQ3Jhd2xSZXN1bHQgeyBwYWdlczogc3RyaW5nW107IHJlc291cmNlczogQ29sbGVjdGVkUmVzb3VyY2VzOyB9XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3Jhd2woc3RhcnRVcmw6IHN0cmluZywgb3B0czogQ3Jhd2xPcHRpb25zKTogUHJvbWlzZTxDcmF3bFJlc3VsdD4ge1xyXG4gIGNvbnN0IGRlcHRoID0gTWF0aC5tYXgoMCwgb3B0cy5kZXB0aCk7XHJcbiAgY29uc3QgbWF4UGFnZXMgPSBvcHRzLm1heFBhZ2VzID8/IDE1O1xyXG4gIGNvbnN0IHZpc2l0ZWQgPSBuZXcgU2V0PHN0cmluZz4oKTtcclxuICBjb25zdCBxdWV1ZTogeyB1cmw6IHN0cmluZzsgZDogbnVtYmVyIH1bXSA9IFt7IHVybDogc3RhcnRVcmwsIGQ6IDAgfV07XHJcbiAgY29uc3Qgb3JpZ2luID0gbmV3IFVSTChzdGFydFVybCkub3JpZ2luO1xyXG5cclxuICBjb25zdCBhZ2dyZWdhdGU6IENvbGxlY3RlZFJlc291cmNlcyA9IHtcclxuICAgIGlubGluZVNjcmlwdHM6IFtdLFxyXG4gICAgaW5saW5lU3R5bGVzOiBbXSxcclxuICAgIGV4dGVybmFsU2NyaXB0T3JpZ2luczogbmV3IFNldCgpLFxyXG4gICAgZXh0ZXJuYWxTdHlsZU9yaWdpbnM6IG5ldyBTZXQoKSxcclxuICAgIGltYWdlT3JpZ2luczogbmV3IFNldCgpLFxyXG4gICAgZm9udE9yaWdpbnM6IG5ldyBTZXQoKSxcclxuICAgIGNvbm5lY3RPcmlnaW5zOiBuZXcgU2V0KCksXHJcbiAgICBkYXRhVXJpczogeyBzY3JpcHRzOiAwLCBpbWFnZXM6IDAsIHN0eWxlczogMCB9XHJcbiAgfTtcclxuXHJcbiAgd2hpbGUgKHF1ZXVlLmxlbmd0aCAmJiB2aXNpdGVkLnNpemUgPCBtYXhQYWdlcykge1xyXG4gICAgY29uc3QgeyB1cmwsIGQgfSA9IHF1ZXVlLnNoaWZ0KCkhO1xyXG4gICAgaWYgKHZpc2l0ZWQuaGFzKHVybCkpIGNvbnRpbnVlO1xyXG4gICAgdmlzaXRlZC5hZGQodXJsKTtcclxuICAgIHRyeSB7XHJcbiAgICAgIGNvbnN0IHBhZ2UgPSBhd2FpdCBmZXRjaFBhZ2UodXJsKTtcclxuICAgICAgY29uc3QgcmVzID0gY29sbGVjdFJlc291cmNlcyhwYWdlLmh0bWwsIHBhZ2UuZmluYWxVcmwpO1xyXG4gICAgICBtZXJnZVJlc291cmNlcyhhZ2dyZWdhdGUsIHJlcyk7XHJcblxyXG4gICAgICBpZiAoZCA8IGRlcHRoKSB7XHJcbiAgICAgICAgLy8gRXh0cmFjdCBsaW5rcyBmb3IgbmV4dCBsZXZlbCAoc2ltcGxlIHJlZ2V4IGFwcHJvYWNoIHRvIGF2b2lkIGV4dHJhIHBhcnNlciB0cmF2ZXJzYWwgY29zdClcclxuICAgICAgICBjb25zdCBsaW5rTWF0Y2hlcyA9IHBhZ2UuaHRtbC5tYXRjaEFsbCgvPGFbXj5dK2hyZWY9W1wiJ10oW15cIicjP10rKVtcIiddL2dpKTtcclxuICAgICAgICBmb3IgKGNvbnN0IG0gb2YgbGlua01hdGNoZXMpIHtcclxuICAgICAgICAgIGNvbnN0IGhyZWYgPSBtWzFdO1xyXG4gICAgICAgICAgaWYgKCFocmVmKSBjb250aW51ZTtcclxuICAgICAgICAgIGxldCBuZXh0OiBzdHJpbmc7XHJcbiAgICAgICAgICB0cnkgeyBuZXh0ID0gbmV3IFVSTChocmVmLCBwYWdlLmZpbmFsVXJsKS50b1N0cmluZygpOyB9IGNhdGNoIHsgY29udGludWU7IH1cclxuICAgICAgICAgIGlmIChvcHRzLnNhbWVPcmlnaW5Pbmx5ICE9PSBmYWxzZSAmJiBuZXcgVVJMKG5leHQpLm9yaWdpbiAhPT0gb3JpZ2luKSBjb250aW51ZTtcclxuICAgICAgICAgIGlmICghdmlzaXRlZC5oYXMobmV4dCkpIHF1ZXVlLnB1c2goeyB1cmw6IG5leHQsIGQ6IGQgKyAxIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBjYXRjaCB7XHJcbiAgICAgIC8vIFNraXAgZXJyb3JzIHNpbGVudGx5IGZvciBub3cgKGNvdWxkIGFkZCBsb2dnaW5nKVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcmV0dXJuIHsgcGFnZXM6IEFycmF5LmZyb20odmlzaXRlZCksIHJlc291cmNlczogYWdncmVnYXRlIH07XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1lcmdlUmVzb3VyY2VzKGJhc2U6IENvbGxlY3RlZFJlc291cmNlcywgZXh0cmE6IENvbGxlY3RlZFJlc291cmNlcykge1xyXG4gIGJhc2UuaW5saW5lU2NyaXB0cy5wdXNoKC4uLmV4dHJhLmlubGluZVNjcmlwdHMpO1xyXG4gIGJhc2UuaW5saW5lU3R5bGVzLnB1c2goLi4uZXh0cmEuaW5saW5lU3R5bGVzKTtcclxuICBleHRyYS5leHRlcm5hbFNjcmlwdE9yaWdpbnMuZm9yRWFjaChvID0+IGJhc2UuZXh0ZXJuYWxTY3JpcHRPcmlnaW5zLmFkZChvKSk7XHJcbiAgZXh0cmEuZXh0ZXJuYWxTdHlsZU9yaWdpbnMuZm9yRWFjaChvID0+IGJhc2UuZXh0ZXJuYWxTdHlsZU9yaWdpbnMuYWRkKG8pKTtcclxuICBleHRyYS5pbWFnZU9yaWdpbnMuZm9yRWFjaChvID0+IGJhc2UuaW1hZ2VPcmlnaW5zLmFkZChvKSk7XHJcbiAgZXh0cmEuZm9udE9yaWdpbnMuZm9yRWFjaChvID0+IGJhc2UuZm9udE9yaWdpbnMuYWRkKG8pKTtcclxuICBleHRyYS5jb25uZWN0T3JpZ2lucy5mb3JFYWNoKG8gPT4gYmFzZS5jb25uZWN0T3JpZ2lucy5hZGQobykpO1xyXG4gIGJhc2UuZGF0YVVyaXMuc2NyaXB0cyArPSBleHRyYS5kYXRhVXJpcy5zY3JpcHRzO1xyXG4gIGJhc2UuZGF0YVVyaXMuaW1hZ2VzICs9IGV4dHJhLmRhdGFVcmlzLmltYWdlcztcclxuICBiYXNlLmRhdGFVcmlzLnN0eWxlcyArPSBleHRyYS5kYXRhVXJpcy5zdHlsZXM7XHJcbn1cclxuIl0sIm5hbWVzIjpbImZldGNoUGFnZSIsImNvbGxlY3RSZXNvdXJjZXMiLCJjcmF3bCIsInN0YXJ0VXJsIiwib3B0cyIsImRlcHRoIiwiTWF0aCIsIm1heCIsIm1heFBhZ2VzIiwidmlzaXRlZCIsIlNldCIsInF1ZXVlIiwidXJsIiwiZCIsIm9yaWdpbiIsIlVSTCIsImFnZ3JlZ2F0ZSIsImlubGluZVNjcmlwdHMiLCJpbmxpbmVTdHlsZXMiLCJleHRlcm5hbFNjcmlwdE9yaWdpbnMiLCJleHRlcm5hbFN0eWxlT3JpZ2lucyIsImltYWdlT3JpZ2lucyIsImZvbnRPcmlnaW5zIiwiY29ubmVjdE9yaWdpbnMiLCJkYXRhVXJpcyIsInNjcmlwdHMiLCJpbWFnZXMiLCJzdHlsZXMiLCJsZW5ndGgiLCJzaXplIiwic2hpZnQiLCJoYXMiLCJhZGQiLCJwYWdlIiwicmVzIiwiaHRtbCIsImZpbmFsVXJsIiwibWVyZ2VSZXNvdXJjZXMiLCJsaW5rTWF0Y2hlcyIsIm1hdGNoQWxsIiwibSIsImhyZWYiLCJuZXh0IiwidG9TdHJpbmciLCJzYW1lT3JpZ2luT25seSIsInB1c2giLCJwYWdlcyIsIkFycmF5IiwiZnJvbSIsInJlc291cmNlcyIsImJhc2UiLCJleHRyYSIsImZvckVhY2giLCJvIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/crawl.ts\n");

/***/ }),

/***/ "(rsc)/./src/fetch.ts":
/*!**********************!*\
  !*** ./src/fetch.ts ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fetchPage: () => (/* binding */ fetchPage)\n/* harmony export */ });\nasync function fetchPage(url, timeoutMs = 15000) {\n    const controller = new AbortController();\n    const t = setTimeout(()=>controller.abort(), timeoutMs);\n    try {\n        const res = await fetch(url, {\n            redirect: \"follow\",\n            signal: controller.signal\n        });\n        const headers = {};\n        res.headers.forEach((v, k)=>{\n            headers[k.toLowerCase()] = v;\n        });\n        const html = await res.text();\n        return {\n            url,\n            finalUrl: res.url,\n            status: res.status,\n            headers,\n            html,\n            csp: headers[\"content-security-policy\"]\n        };\n    } finally{\n        clearTimeout(t);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvZmV0Y2gudHMiLCJtYXBwaW5ncyI6Ijs7OztBQVVPLGVBQWVBLFVBQVVDLEdBQVcsRUFBRUMsWUFBWSxLQUFLO0lBQzVELE1BQU1DLGFBQWEsSUFBSUM7SUFDdkIsTUFBTUMsSUFBSUMsV0FBVyxJQUFNSCxXQUFXSSxLQUFLLElBQUlMO0lBQy9DLElBQUk7UUFDRixNQUFNTSxNQUFNLE1BQU1DLE1BQU1SLEtBQUs7WUFBRVMsVUFBVTtZQUFVQyxRQUFRUixXQUFXUSxNQUFNO1FBQUM7UUFDN0UsTUFBTUMsVUFBa0MsQ0FBQztRQUN6Q0osSUFBSUksT0FBTyxDQUFDQyxPQUFPLENBQUMsQ0FBQ0MsR0FBR0M7WUFBUUgsT0FBTyxDQUFDRyxFQUFFQyxXQUFXLEdBQUcsR0FBR0Y7UUFBRztRQUM5RCxNQUFNRyxPQUFPLE1BQU1ULElBQUlVLElBQUk7UUFDM0IsT0FBTztZQUNMakI7WUFDQWtCLFVBQVVYLElBQUlQLEdBQUc7WUFDakJtQixRQUFRWixJQUFJWSxNQUFNO1lBQ2xCUjtZQUNBSztZQUNBSSxLQUFLVCxPQUFPLENBQUMsMEJBQTBCO1FBQ3pDO0lBQ0YsU0FBVTtRQUNSVSxhQUFhakI7SUFDZjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXV0b2NzcC8uL3NyYy9mZXRjaC50cz9mYmViIl0sInNvdXJjZXNDb250ZW50IjpbIlxyXG5leHBvcnQgaW50ZXJmYWNlIEZldGNoZWRQYWdlIHtcclxuICB1cmw6IHN0cmluZztcclxuICBmaW5hbFVybDogc3RyaW5nO1xyXG4gIHN0YXR1czogbnVtYmVyO1xyXG4gIGhlYWRlcnM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz47XHJcbiAgaHRtbDogc3RyaW5nO1xyXG4gIGNzcD86IHN0cmluZztcclxufVxyXG5cclxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGZldGNoUGFnZSh1cmw6IHN0cmluZywgdGltZW91dE1zID0gMTUwMDApOiBQcm9taXNlPEZldGNoZWRQYWdlPiB7XHJcbiAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcclxuICBjb25zdCB0ID0gc2V0VGltZW91dCgoKSA9PiBjb250cm9sbGVyLmFib3J0KCksIHRpbWVvdXRNcyk7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCwgeyByZWRpcmVjdDogJ2ZvbGxvdycsIHNpZ25hbDogY29udHJvbGxlci5zaWduYWwgfSk7XHJcbiAgICBjb25zdCBoZWFkZXJzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge307XHJcbiAgICByZXMuaGVhZGVycy5mb3JFYWNoKCh2LCBrKSA9PiB7IGhlYWRlcnNbay50b0xvd2VyQ2FzZSgpXSA9IHY7IH0pO1xyXG4gICAgY29uc3QgaHRtbCA9IGF3YWl0IHJlcy50ZXh0KCk7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB1cmwsXHJcbiAgICAgIGZpbmFsVXJsOiByZXMudXJsLFxyXG4gICAgICBzdGF0dXM6IHJlcy5zdGF0dXMsXHJcbiAgICAgIGhlYWRlcnMsXHJcbiAgICAgIGh0bWwsXHJcbiAgICAgIGNzcDogaGVhZGVyc1snY29udGVudC1zZWN1cml0eS1wb2xpY3knXVxyXG4gICAgfTtcclxuICB9IGZpbmFsbHkge1xyXG4gICAgY2xlYXJUaW1lb3V0KHQpO1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiZmV0Y2hQYWdlIiwidXJsIiwidGltZW91dE1zIiwiY29udHJvbGxlciIsIkFib3J0Q29udHJvbGxlciIsInQiLCJzZXRUaW1lb3V0IiwiYWJvcnQiLCJyZXMiLCJmZXRjaCIsInJlZGlyZWN0Iiwic2lnbmFsIiwiaGVhZGVycyIsImZvckVhY2giLCJ2IiwiayIsInRvTG93ZXJDYXNlIiwiaHRtbCIsInRleHQiLCJmaW5hbFVybCIsInN0YXR1cyIsImNzcCIsImNsZWFyVGltZW91dCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/fetch.ts\n");

/***/ }),

/***/ "(rsc)/./src/risk.ts":
/*!*********************!*\
  !*** ./src/risk.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   assessPolicy: () => (/* binding */ assessPolicy)\n/* harmony export */ });\n// Heuristic scoring: start at 100, subtract for risky patterns / missing hardening\nfunction assessPolicy(policy) {\n    const issues = [];\n    let score = 100;\n    const lower = policy.toLowerCase();\n    function add(id, message, weight) {\n        issues.push({\n            id,\n            message,\n            weight\n        });\n        score -= weight;\n    }\n    // Parse directives into map\n    const parts = policy.split(/;\\s*/).filter(Boolean);\n    const dirMap = {};\n    for (const p of parts){\n        const [name, ...rest] = p.trim().split(/\\s+/);\n        if (!name) continue;\n        dirMap[name] = rest;\n    }\n    // Key directives presence\n    const required = [\n        \"default-src\",\n        \"object-src\",\n        \"frame-ancestors\",\n        \"base-uri\"\n    ];\n    for (const r of required){\n        if (!(r in dirMap)) add(\"missing-\" + r, `Missing directive: ${r}`, 8);\n    }\n    // default-src fallback risk\n    if (dirMap[\"default-src\"] && dirMap[\"default-src\"].includes(\"*\")) {\n        add(\"default-wildcard\", \"default-src allows * (overly permissive)\", 15);\n    }\n    // wildcard usage in script/style/img connect\n    const wildcardDirs = [\n        \"script-src\",\n        \"style-src\",\n        \"img-src\",\n        \"connect-src\"\n    ];\n    for (const d of wildcardDirs){\n        const v = dirMap[d];\n        if (!v) continue;\n        if (v.includes(\"*\")) add(d + \"-wildcard\", `${d} has *`, 12);\n        if (v.some((tok)=>tok.startsWith(\"http:\"))) add(d + \"-http\", `${d} includes insecure http: origin`, 10);\n        if (v.some((tok)=>tok === \"'unsafe-inline'\")) add(d + \"-unsafe-inline\", `${d} uses 'unsafe-inline'`, 14);\n        if (v.some((tok)=>tok === \"'unsafe-eval'\")) add(d + \"-unsafe-eval\", `${d} uses 'unsafe-eval'`, 10);\n    }\n    // object-src should be 'none'\n    if (dirMap[\"object-src\"] && !dirMap[\"object-src\"].includes(\"'none'\")) {\n        add(\"object-not-none\", \"object-src should be 'none'\", 10);\n    }\n    // frame-ancestors should be restrictive\n    if (dirMap[\"frame-ancestors\"] && dirMap[\"frame-ancestors\"].includes(\"*\")) {\n        add(\"frame-any\", \"frame-ancestors uses * (clickjacking risk)\", 12);\n    }\n    // upgrade-insecure-requests recommended\n    if (!parts.some((p)=>p.startsWith(\"upgrade-insecure-requests\"))) {\n        add(\"missing-upgrade\", \"Missing upgrade-insecure-requests (recommended)\", 4);\n    }\n    // Hash count heuristic (encourage hashing vs unsafe-inline)\n    const hashCount = (policy.match(/'sha256-[A-Za-z0-9+/=]+'/g) || []).length;\n    if (hashCount === 0 && dirMap[\"script-src\"] && dirMap[\"script-src\"].length > 0 && !dirMap[\"script-src\"].includes(\"'unsafe-inline'\")) {\n        add(\"no-hashes\", \"No script hashes detected (consider hashing inline scripts)\", 5);\n    }\n    if (score < 0) score = 0;\n    const level = score >= 80 ? \"low\" : score >= 55 ? \"medium\" : \"high\";\n    return {\n        score,\n        level,\n        issues\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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ZCxNQUFNLENBQUMsYUFBYSxJQUFJQSxNQUFNLENBQUMsYUFBYSxDQUFDZ0IsTUFBTSxHQUFHLEtBQUssQ0FBQ2hCLE1BQU0sQ0FBQyxhQUFhLENBQUNPLFFBQVEsQ0FBQyxvQkFBb0I7UUFDbkloQixJQUFJLGFBQWEsK0RBQStEO0lBQ2xGO0lBRUEsSUFBSUgsUUFBUSxHQUFHQSxRQUFRO0lBQ3ZCLE1BQU02QixRQUE2QjdCLFNBQVMsS0FBSyxRQUFRQSxTQUFTLEtBQUssV0FBVztJQUNsRixPQUFPO1FBQUVBO1FBQU82QjtRQUFPOUI7SUFBTztBQUNoQyIsInNvdXJjZXMiOlsid2VicGFjazovL2F1dG9jc3AvLi9zcmMvcmlzay50cz8xNGIzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBpbnRlcmZhY2UgUmlza0lzc3VlIHsgaWQ6IHN0cmluZzsgbWVzc2FnZTogc3RyaW5nOyB3ZWlnaHQ6IG51bWJlcjsgfVxyXG5leHBvcnQgaW50ZXJmYWNlIFJpc2tSZXN1bHQgeyBzY29yZTogbnVtYmVyOyBsZXZlbDogJ2xvdycgfCAnbWVkaXVtJyB8ICdoaWdoJzsgaXNzdWVzOiBSaXNrSXNzdWVbXTsgfVxyXG5cclxuLy8gSGV1cmlzdGljIHNjb3Jpbmc6IHN0YXJ0IGF0IDEwMCwgc3VidHJhY3QgZm9yIHJpc2t5IHBhdHRlcm5zIC8gbWlzc2luZyBoYXJkZW5pbmdcclxuZXhwb3J0IGZ1bmN0aW9uIGFzc2Vzc1BvbGljeShwb2xpY3k6IHN0cmluZyk6IFJpc2tSZXN1bHQge1xyXG4gIGNvbnN0IGlzc3VlczogUmlza0lzc3VlW10gPSBbXTtcclxuICBsZXQgc2NvcmUgPSAxMDA7XHJcbiAgY29uc3QgbG93ZXIgPSBwb2xpY3kudG9Mb3dlckNhc2UoKTtcclxuXHJcbiAgZnVuY3Rpb24gYWRkKGlkOiBzdHJpbmcsIG1lc3NhZ2U6IHN0cmluZywgd2VpZ2h0OiBudW1iZXIpIHtcclxuICAgIGlzc3Vlcy5wdXNoKHsgaWQsIG1lc3NhZ2UsIHdlaWdodCB9KTtcclxuICAgIHNjb3JlIC09IHdlaWdodDtcclxuICB9XHJcblxyXG4gIC8vIFBhcnNlIGRpcmVjdGl2ZXMgaW50byBtYXBcclxuICBjb25zdCBwYXJ0cyA9IHBvbGljeS5zcGxpdCgvO1xccyovKS5maWx0ZXIoQm9vbGVhbik7XHJcbiAgY29uc3QgZGlyTWFwOiBSZWNvcmQ8c3RyaW5nLHN0cmluZ1tdPiA9IHt9O1xyXG4gIGZvciAoY29uc3QgcCBvZiBwYXJ0cykge1xyXG4gICAgY29uc3QgW25hbWUsIC4uLnJlc3RdID0gcC50cmltKCkuc3BsaXQoL1xccysvKTtcclxuICAgIGlmICghbmFtZSkgY29udGludWU7XHJcbiAgICBkaXJNYXBbbmFtZV0gPSByZXN0O1xyXG4gIH1cclxuXHJcbiAgLy8gS2V5IGRpcmVjdGl2ZXMgcHJlc2VuY2VcclxuICBjb25zdCByZXF1aXJlZCA9IFsnZGVmYXVsdC1zcmMnLCdvYmplY3Qtc3JjJywnZnJhbWUtYW5jZXN0b3JzJywnYmFzZS11cmknXTtcclxuICBmb3IgKGNvbnN0IHIgb2YgcmVxdWlyZWQpIHtcclxuICAgIGlmICghKHIgaW4gZGlyTWFwKSkgYWRkKCdtaXNzaW5nLScrciwgYE1pc3NpbmcgZGlyZWN0aXZlOiAke3J9YCwgOCk7XHJcbiAgfVxyXG5cclxuICAvLyBkZWZhdWx0LXNyYyBmYWxsYmFjayByaXNrXHJcbiAgaWYgKGRpck1hcFsnZGVmYXVsdC1zcmMnXSAmJiBkaXJNYXBbJ2RlZmF1bHQtc3JjJ10uaW5jbHVkZXMoXCIqXCIpKSB7XHJcbiAgICBhZGQoJ2RlZmF1bHQtd2lsZGNhcmQnLCBcImRlZmF1bHQtc3JjIGFsbG93cyAqIChvdmVybHkgcGVybWlzc2l2ZSlcIiwgMTUpO1xyXG4gIH1cclxuXHJcbiAgLy8gd2lsZGNhcmQgdXNhZ2UgaW4gc2NyaXB0L3N0eWxlL2ltZyBjb25uZWN0XHJcbiAgY29uc3Qgd2lsZGNhcmREaXJzID0gWydzY3JpcHQtc3JjJywnc3R5bGUtc3JjJywnaW1nLXNyYycsJ2Nvbm5lY3Qtc3JjJ107XHJcbiAgZm9yIChjb25zdCBkIG9mIHdpbGRjYXJkRGlycykge1xyXG4gICAgY29uc3QgdiA9IGRpck1hcFtkXTsgaWYgKCF2KSBjb250aW51ZTtcclxuICAgIGlmICh2LmluY2x1ZGVzKFwiKlwiKSkgYWRkKGQrJy13aWxkY2FyZCcsIGAke2R9IGhhcyAqYCwgMTIpO1xyXG4gICAgaWYgKHYuc29tZSh0b2sgPT4gdG9rLnN0YXJ0c1dpdGgoJ2h0dHA6JykpKSBhZGQoZCsnLWh0dHAnLCBgJHtkfSBpbmNsdWRlcyBpbnNlY3VyZSBodHRwOiBvcmlnaW5gLCAxMCk7XHJcbiAgICBpZiAodi5zb21lKHRvayA9PiB0b2sgPT09IFwiJ3Vuc2FmZS1pbmxpbmUnXCIpKSBhZGQoZCsnLXVuc2FmZS1pbmxpbmUnLCBgJHtkfSB1c2VzICd1bnNhZmUtaW5saW5lJ2AsIDE0KTtcclxuICAgIGlmICh2LnNvbWUodG9rID0+IHRvayA9PT0gXCIndW5zYWZlLWV2YWwnXCIpKSBhZGQoZCsnLXVuc2FmZS1ldmFsJywgYCR7ZH0gdXNlcyAndW5zYWZlLWV2YWwnYCwgMTApO1xyXG4gIH1cclxuXHJcbiAgLy8gb2JqZWN0LXNyYyBzaG91bGQgYmUgJ25vbmUnXHJcbiAgaWYgKGRpck1hcFsnb2JqZWN0LXNyYyddICYmICFkaXJNYXBbJ29iamVjdC1zcmMnXS5pbmNsdWRlcyhcIidub25lJ1wiKSkge1xyXG4gICAgYWRkKCdvYmplY3Qtbm90LW5vbmUnLCBcIm9iamVjdC1zcmMgc2hvdWxkIGJlICdub25lJ1wiLCAxMCk7XHJcbiAgfVxyXG5cclxuICAvLyBmcmFtZS1hbmNlc3RvcnMgc2hvdWxkIGJlIHJlc3RyaWN0aXZlXHJcbiAgaWYgKGRpck1hcFsnZnJhbWUtYW5jZXN0b3JzJ10gJiYgZGlyTWFwWydmcmFtZS1hbmNlc3RvcnMnXS5pbmNsdWRlcyhcIipcIikpIHtcclxuICAgIGFkZCgnZnJhbWUtYW55JywgXCJmcmFtZS1hbmNlc3RvcnMgdXNlcyAqIChjbGlja2phY2tpbmcgcmlzaylcIiwgMTIpO1xyXG4gIH1cclxuXHJcbiAgLy8gdXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cyByZWNvbW1lbmRlZFxyXG4gIGlmICghcGFydHMuc29tZShwID0+IHAuc3RhcnRzV2l0aCgndXBncmFkZS1pbnNlY3VyZS1yZXF1ZXN0cycpKSkge1xyXG4gICAgYWRkKCdtaXNzaW5nLXVwZ3JhZGUnLCAnTWlzc2luZyB1cGdyYWRlLWluc2VjdXJlLXJlcXVlc3RzIChyZWNvbW1lbmRlZCknLCA0KTtcclxuICB9XHJcblxyXG4gIC8vIEhhc2ggY291bnQgaGV1cmlzdGljIChlbmNvdXJhZ2UgaGFzaGluZyB2cyB1bnNhZmUtaW5saW5lKVxyXG4gIGNvbnN0IGhhc2hDb3VudCA9IChwb2xpY3kubWF0Y2goLydzaGEyNTYtW0EtWmEtejAtOSsvPV0rJy9nKSB8fCBbXSkubGVuZ3RoO1xyXG4gIGlmIChoYXNoQ291bnQgPT09IDAgJiYgZGlyTWFwWydzY3JpcHQtc3JjJ10gJiYgZGlyTWFwWydzY3JpcHQtc3JjJ10ubGVuZ3RoID4gMCAmJiAhZGlyTWFwWydzY3JpcHQtc3JjJ10uaW5jbHVkZXMoXCIndW5zYWZlLWlubGluZSdcIikpIHtcclxuICAgIGFkZCgnbm8taGFzaGVzJywgJ05vIHNjcmlwdCBoYXNoZXMgZGV0ZWN0ZWQgKGNvbnNpZGVyIGhhc2hpbmcgaW5saW5lIHNjcmlwdHMpJywgNSk7XHJcbiAgfVxyXG5cclxuICBpZiAoc2NvcmUgPCAwKSBzY29yZSA9IDA7XHJcbiAgY29uc3QgbGV2ZWw6IFJpc2tSZXN1bHRbJ2xldmVsJ10gPSBzY29yZSA+PSA4MCA/ICdsb3cnIDogc2NvcmUgPj0gNTUgPyAnbWVkaXVtJyA6ICdoaWdoJztcclxuICByZXR1cm4geyBzY29yZSwgbGV2ZWwsIGlzc3VlcyB9O1xyXG59XHJcbiJdLCJuYW1lcyI6WyJhc3Nlc3NQb2xpY3kiLCJwb2xpY3kiLCJpc3N1ZXMiLCJzY29yZSIsImxvd2VyIiwidG9Mb3dlckNhc2UiLCJhZGQiLCJpZCIsIm1lc3NhZ2UiLCJ3ZWlnaHQiLCJwdXNoIiwicGFydHMiLCJzcGxpdCIsImZpbHRlciIsIkJvb2xlYW4iLCJkaXJNYXAiLCJwIiwibmFtZSIsInJlc3QiLCJ0cmltIiwicmVxdWlyZWQiLCJyIiwiaW5jbHVkZXMiLCJ3aWxkY2FyZERpcnMiLCJkIiwidiIsInNvbWUiLCJ0b2siLCJzdGFydHNXaXRoIiwiaGFzaENvdW50IiwibWF0Y2giLCJsZW5ndGgiLCJsZXZlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/risk.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/parse5","vendor-chunks/entities"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fcsp%2Froute&page=%2Fapi%2Fcsp%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fcsp%2Froute.ts&appDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Cjavie%5CDesktop%5CGame%20Online%20Html%5Cautocsp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();