"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "_rsc_src_runtime_ts";
exports.ids = ["_rsc_src_runtime_ts"];
exports.modules = {

/***/ "(rsc)/./src/runtime.ts":
/*!************************!*\
  !*** ./src/runtime.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   collectRuntimeResources: () => (/* binding */ collectRuntimeResources)\n/* harmony export */ });\n/* harmony import */ var _collect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./collect */ \"(rsc)/./src/collect.ts\");\n\nasync function collectRuntimeResources(url, opts = {}) {\n    // Dynamic import so build does not require playwright present\n    let chromium;\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-var-requires\n        chromium = (await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! playwright */ \"playwright\"))).chromium;\n    } catch  {\n        // Playwright not installed - fall back to static only\n        return (0,_collect__WEBPACK_IMPORTED_MODULE_0__.collectResources)(\"\", url); // returns mostly empty set\n    }\n    const timeout = opts.timeoutMs ?? 15000;\n    const browser = await chromium.launch({\n        headless: true\n    });\n    try {\n        const ctx = await browser.newContext();\n        const page = await ctx.newPage();\n        await page.goto(url, {\n            timeout,\n            waitUntil: opts.waitUntil ?? \"networkidle\"\n        });\n        // Extract HTML snapshot AFTER runtime mutations\n        const html = await page.content();\n        // Collect network request origins for scripts/styles/images/fonts/connect\n        const externalScriptOrigins = new Set();\n        const externalStyleOrigins = new Set();\n        const imageOrigins = new Set();\n        const fontOrigins = new Set();\n        const connectOrigins = new Set();\n        page.on(\"requestfinished\", (req)=>{\n            try {\n                const resourceType = req.resourceType();\n                const u = req.url();\n                const origin = safeOrigin(u);\n                if (!origin) return;\n                switch(resourceType){\n                    case \"script\":\n                        externalScriptOrigins.add(origin);\n                        break;\n                    case \"stylesheet\":\n                        externalStyleOrigins.add(origin);\n                        break;\n                    case \"image\":\n                        imageOrigins.add(origin);\n                        break;\n                    case \"font\":\n                        fontOrigins.add(origin);\n                        break;\n                    case \"xhr\":\n                    case \"fetch\":\n                    case \"websocket\":\n                        connectOrigins.add(origin);\n                        break;\n                    default:\n                        break;\n                }\n            } catch  {}\n        });\n        // small wait to allow late network\n        await page.waitForTimeout(500);\n        const staticCollected = (0,_collect__WEBPACK_IMPORTED_MODULE_0__.collectResources)(html, url);\n        // merge network-discovered origins\n        externalScriptOrigins.forEach((o)=>staticCollected.externalScriptOrigins.add(o));\n        externalStyleOrigins.forEach((o)=>staticCollected.externalStyleOrigins.add(o));\n        imageOrigins.forEach((o)=>staticCollected.imageOrigins.add(o));\n        fontOrigins.forEach((o)=>staticCollected.fontOrigins.add(o));\n        connectOrigins.forEach((o)=>staticCollected.connectOrigins.add(o));\n        return staticCollected;\n    } finally{\n        await browser.close();\n    }\n}\nfunction safeOrigin(u) {\n    try {\n        const url = new URL(u);\n        return url.origin;\n    } catch  {\n        return undefined;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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cnVudGltZS50cz9jM2Q3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbGxlY3RSZXNvdXJjZXMsIENvbGxlY3RlZFJlc291cmNlcyB9IGZyb20gJy4vY29sbGVjdCc7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIFJ1bnRpbWVPcHRpb25zIHsgdGltZW91dE1zPzogbnVtYmVyOyB3YWl0VW50aWw/OiAnbG9hZCcgfCAnZG9tY29udGVudGxvYWRlZCcgfCAnbmV0d29ya2lkbGUnOyB9XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY29sbGVjdFJ1bnRpbWVSZXNvdXJjZXModXJsOiBzdHJpbmcsIG9wdHM6IFJ1bnRpbWVPcHRpb25zID0ge30pOiBQcm9taXNlPENvbGxlY3RlZFJlc291cmNlcz4ge1xyXG4gIC8vIER5bmFtaWMgaW1wb3J0IHNvIGJ1aWxkIGRvZXMgbm90IHJlcXVpcmUgcGxheXdyaWdodCBwcmVzZW50XHJcbiAgbGV0IGNocm9taXVtOiBhbnk7XHJcbiAgdHJ5IHtcclxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdmFyLXJlcXVpcmVzXHJcbiAgICBjaHJvbWl1bSA9IChhd2FpdCBpbXBvcnQoJ3BsYXl3cmlnaHQnKSkuY2hyb21pdW07XHJcbiAgfSBjYXRjaCB7XHJcbiAgICAvLyBQbGF5d3JpZ2h0IG5vdCBpbnN0YWxsZWQgLSBmYWxsIGJhY2sgdG8gc3RhdGljIG9ubHlcclxuICAgIHJldHVybiBjb2xsZWN0UmVzb3VyY2VzKCcnLCB1cmwpOyAvLyByZXR1cm5zIG1vc3RseSBlbXB0eSBzZXRcclxuICB9XHJcblxyXG4gIGNvbnN0IHRpbWVvdXQgPSBvcHRzLnRpbWVvdXRNcyA/PyAxNTAwMDtcclxuICBjb25zdCBicm93c2VyID0gYXdhaXQgY2hyb21pdW0ubGF1bmNoKHsgaGVhZGxlc3M6IHRydWUgfSk7XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGN0eCA9IGF3YWl0IGJyb3dzZXIubmV3Q29udGV4dCgpO1xyXG4gICAgY29uc3QgcGFnZSA9IGF3YWl0IGN0eC5uZXdQYWdlKCk7XHJcbiAgICBhd2FpdCBwYWdlLmdvdG8odXJsLCB7IHRpbWVvdXQsIHdhaXRVbnRpbDogb3B0cy53YWl0VW50aWwgPz8gJ25ldHdvcmtpZGxlJyB9KTtcclxuXHJcbiAgICAvLyBFeHRyYWN0IEhUTUwgc25hcHNob3QgQUZURVIgcnVudGltZSBtdXRhdGlvbnNcclxuICAgIGNvbnN0IGh0bWwgPSBhd2FpdCBwYWdlLmNvbnRlbnQoKTtcclxuXHJcbiAgICAvLyBDb2xsZWN0IG5ldHdvcmsgcmVxdWVzdCBvcmlnaW5zIGZvciBzY3JpcHRzL3N0eWxlcy9pbWFnZXMvZm9udHMvY29ubmVjdFxyXG4gICAgY29uc3QgZXh0ZXJuYWxTY3JpcHRPcmlnaW5zID0gbmV3IFNldDxzdHJpbmc+KCk7XHJcbiAgICBjb25zdCBleHRlcm5hbFN0eWxlT3JpZ2lucyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG4gICAgY29uc3QgaW1hZ2VPcmlnaW5zID0gbmV3IFNldDxzdHJpbmc+KCk7XHJcbiAgICBjb25zdCBmb250T3JpZ2lucyA9IG5ldyBTZXQ8c3RyaW5nPigpO1xyXG4gICAgY29uc3QgY29ubmVjdE9yaWdpbnMgPSBuZXcgU2V0PHN0cmluZz4oKTtcclxuXHJcbiAgcGFnZS5vbigncmVxdWVzdGZpbmlzaGVkJywgKHJlcTogYW55KSA9PiB7XHJcbiAgICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzb3VyY2VUeXBlID0gcmVxLnJlc291cmNlVHlwZSgpO1xyXG4gICAgICAgIGNvbnN0IHUgPSByZXEudXJsKCk7XHJcbiAgICAgICAgY29uc3Qgb3JpZ2luID0gc2FmZU9yaWdpbih1KTtcclxuICAgICAgICBpZiAoIW9yaWdpbikgcmV0dXJuO1xyXG4gICAgICAgIHN3aXRjaCAocmVzb3VyY2VUeXBlKSB7XHJcbiAgICAgICAgICBjYXNlICdzY3JpcHQnOiBleHRlcm5hbFNjcmlwdE9yaWdpbnMuYWRkKG9yaWdpbik7IGJyZWFrO1xyXG4gICAgICAgICAgY2FzZSAnc3R5bGVzaGVldCc6IGV4dGVybmFsU3R5bGVPcmlnaW5zLmFkZChvcmlnaW4pOyBicmVhaztcclxuICAgICAgICAgIGNhc2UgJ2ltYWdlJzogaW1hZ2VPcmlnaW5zLmFkZChvcmlnaW4pOyBicmVhaztcclxuICAgICAgICAgIGNhc2UgJ2ZvbnQnOiBmb250T3JpZ2lucy5hZGQob3JpZ2luKTsgYnJlYWs7XHJcbiAgICAgICAgICBjYXNlICd4aHInOlxyXG4gICAgICAgICAgY2FzZSAnZmV0Y2gnOlxyXG4gICAgICAgICAgY2FzZSAnd2Vic29ja2V0JzogY29ubmVjdE9yaWdpbnMuYWRkKG9yaWdpbik7IGJyZWFrO1xyXG4gICAgICAgICAgZGVmYXVsdDogYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICB9IGNhdGNoIHt9XHJcbiAgICB9KTtcclxuXHJcbiAgICAvLyBzbWFsbCB3YWl0IHRvIGFsbG93IGxhdGUgbmV0d29ya1xyXG4gICAgYXdhaXQgcGFnZS53YWl0Rm9yVGltZW91dCg1MDApO1xyXG5cclxuICAgIGNvbnN0IHN0YXRpY0NvbGxlY3RlZCA9IGNvbGxlY3RSZXNvdXJjZXMoaHRtbCwgdXJsKTtcclxuXHJcbiAgICAvLyBtZXJnZSBuZXR3b3JrLWRpc2NvdmVyZWQgb3JpZ2luc1xyXG4gICAgZXh0ZXJuYWxTY3JpcHRPcmlnaW5zLmZvckVhY2gobyA9PiBzdGF0aWNDb2xsZWN0ZWQuZXh0ZXJuYWxTY3JpcHRPcmlnaW5zLmFkZChvKSk7XHJcbiAgICBleHRlcm5hbFN0eWxlT3JpZ2lucy5mb3JFYWNoKG8gPT4gc3RhdGljQ29sbGVjdGVkLmV4dGVybmFsU3R5bGVPcmlnaW5zLmFkZChvKSk7XHJcbiAgICBpbWFnZU9yaWdpbnMuZm9yRWFjaChvID0+IHN0YXRpY0NvbGxlY3RlZC5pbWFnZU9yaWdpbnMuYWRkKG8pKTtcclxuICAgIGZvbnRPcmlnaW5zLmZvckVhY2gobyA9PiBzdGF0aWNDb2xsZWN0ZWQuZm9udE9yaWdpbnMuYWRkKG8pKTtcclxuICAgIGNvbm5lY3RPcmlnaW5zLmZvckVhY2gobyA9PiBzdGF0aWNDb2xsZWN0ZWQuY29ubmVjdE9yaWdpbnMuYWRkKG8pKTtcclxuXHJcbiAgICByZXR1cm4gc3RhdGljQ29sbGVjdGVkO1xyXG4gIH0gZmluYWxseSB7XHJcbiAgICBhd2FpdCBicm93c2VyLmNsb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzYWZlT3JpZ2luKHU6IHN0cmluZyk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XHJcbiAgdHJ5IHsgY29uc3QgdXJsID0gbmV3IFVSTCh1KTsgcmV0dXJuIHVybC5vcmlnaW47IH0gY2F0Y2ggeyByZXR1cm4gdW5kZWZpbmVkOyB9XHJcbn1cclxuIl0sIm5hbWVzIjpbImNvbGxlY3RSZXNvdXJjZXMiLCJjb2xsZWN0UnVudGltZVJlc291cmNlcyIsInVybCIsIm9wdHMiLCJjaHJvbWl1bSIsInRpbWVvdXQiLCJ0aW1lb3V0TXMiLCJicm93c2VyIiwibGF1bmNoIiwiaGVhZGxlc3MiLCJjdHgiLCJuZXdDb250ZXh0IiwicGFnZSIsIm5ld1BhZ2UiLCJnb3RvIiwid2FpdFVudGlsIiwiaHRtbCIsImNvbnRlbnQiLCJleHRlcm5hbFNjcmlwdE9yaWdpbnMiLCJTZXQiLCJleHRlcm5hbFN0eWxlT3JpZ2lucyIsImltYWdlT3JpZ2lucyIsImZvbnRPcmlnaW5zIiwiY29ubmVjdE9yaWdpbnMiLCJvbiIsInJlcSIsInJlc291cmNlVHlwZSIsInUiLCJvcmlnaW4iLCJzYWZlT3JpZ2luIiwiYWRkIiwid2FpdEZvclRpbWVvdXQiLCJzdGF0aWNDb2xsZWN0ZWQiLCJmb3JFYWNoIiwibyIsImNsb3NlIiwiVVJMIiwidW5kZWZpbmVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/runtime.ts\n");

/***/ })

};
;